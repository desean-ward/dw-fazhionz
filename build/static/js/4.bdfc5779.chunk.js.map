{"version":3,"sources":["components/form-input/form-input.component.jsx","components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.jsx","components/sign-up/sign-up.component.jsx","routes/authentication/authentication.component.jsx"],"names":["FormInput","_ref","handleChange","label","otherProps","_objectWithoutProperties","_excluded","_jsxs","className","children","_jsx","_objectSpread","onChange","concat","value","length","SignInContainer","styled","div","_templateObject","_taggedTemplateLiteral","defaultFormFields","email","password","SignIn","_useState","useState","_useState2","_slicedToArray","formFields","setFormFields","_useState3","_useState4","modal","setModal","_useState5","_useState6","error","setError","setCurrentUser","useContext","UserContext","setCartItems","CartContext","showModal","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","user","wrap","_context","prev","next","preventDefault","signInAuthUserWithEmailAndPassword","sent","cartItems","console","log","JSON","stringify","t0","t1","code","prevFormFields","abrupt","stop","_x","apply","arguments","googleSignIn","_ref2","_callee2","_yield$signInWithGoog","userItems","_context2","signInWithGooglePopup","getCartItems","_event$target","target","name","_defineProperty","Fragment","onSubmit","type","required","CustomButton","buttonType","onClick","src","alt","GlassModal","show","close","titleBG","title","content","SignUpFormContainer","SignUpForm","_templateObject2","ButtonsContainer","_templateObject3","confirmPassword","displayName","SignUp","_useContext","currentUser","_yield$createAuthUser","createAuthUserWithEmailAndPassword","createUserDocumentFromAuth","useEffect","autoComplete","Authentication","AnimatedPage"],"mappings":"gRA6BeA,EArBG,SAAHC,GAAA,IAAMC,EAAYD,EAAZC,aAAcC,EAAKF,EAALE,MAAUC,EAAUC,YAAAJ,EAAAK,GAAA,OACnDC,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACtBC,cAAA,QAAAC,YAAA,CAAOH,UAAU,aAAaI,SAAWV,GAAoBE,IAKzDD,EACCO,cAAA,SAGGF,UAAS,GAAAK,OAAMT,EAAWU,MAAMC,OAAS,SAAW,GAAE,qBAAqBN,SAG1EN,IAEH,OAEJ,E,kDCxBOa,EAAkBC,IAAOC,IAAGC,MAAAC,YAAA,qxB,QCgBnCC,EAAoB,CACxBC,MAAO,GACPC,SAAU,IA4HGC,EAxHA,WACb,IAAAC,EAAoCC,mBAASL,GAAkBM,EAAAC,YAAAH,EAAA,GAAxDI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,EAA0BL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA0BT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACdd,EAAoBO,EAApBP,MAAOC,EAAaM,EAAbN,SACPgB,EAAmBC,qBAAWC,KAA9BF,eACAG,EAAiBF,qBAAWG,KAA5BD,aAEFE,EAAY,WAChBV,GAAUD,EACZ,EAEMY,EAAY,eAAA5C,EAAA6C,YAAAC,cAAAC,MAAG,SAAAC,EAAOC,GAAK,IAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACR,OAAvBL,EAAMM,iBAAiBH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGFE,YAAmCnC,EAAOC,GAAU,KAAD,EAAhE4B,EAAIE,EAAAK,KAEVnB,EAAeY,GACfT,EAAaS,EAAKQ,WAClBC,QAAQC,IACN,cACEC,KAAKC,UAAUZ,GACf,KACAW,KAAKC,UAAUZ,EAAKQ,YAIxB7B,EAAcT,GAAmBgC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAAAA,EAAAY,GAEzBZ,EAAAW,GAAME,KAAIb,EAAAE,KACX,wBADWF,EAAAY,GACU,GAQrB,wBARqBZ,EAAAY,GAQA,oBAFpB,OALJ3B,EAAS,iCACTM,IACAd,GAAc,SAACqC,GAAc,OAAAxD,wBAAA,GACxBwD,GAAc,IACjB5C,SAAU,IAAE,IACV8B,EAAAe,OAAA,oBAK6B,OAFjC9B,EAAS,mBACTM,IACAd,EAAcT,GAAmBgC,EAAAe,OAAA,oBAGjCR,QAAQC,IAAI,UAASR,EAAAW,IAAU,yBAAAX,EAAAgB,OAAA,GAAApB,EAAA,mBAGtC,gBApCiBqB,GAAA,OAAArE,EAAAsE,MAAA,KAAAC,UAAA,KAsCZC,EAAY,eAAAC,EAAA5B,YAAAC,cAAAC,MAAG,SAAA2B,IAAA,IAAAC,EAAAzB,EAAA0B,EAAA,OAAA9B,cAAAK,MAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EACIwB,cAAwB,KAAD,EAAlC,OAAkCH,EAAAE,EAAApB,KAAtCP,EAAIyB,EAAJzB,KAAI2B,EAAAvB,KAAA,EAIYyB,YAAa7B,GAAM,KAAD,EAApC0B,EAASC,EAAApB,KACfhB,EAAamC,GACb,wBAAAC,EAAAT,OAAA,GAAAM,EAAA,KACD,kBARiB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAWZtE,EAAe,SAACgD,GAEpB,IAAA+B,EAAwB/B,EAAMgC,OAAtBpE,EAAKmE,EAALnE,MAAOqE,EAAIF,EAAJE,KAEfrD,EAAanB,wBAAC,CAAC,EAAIkB,GAAU,GAAAuD,YAAA,GAAGD,EAAOrE,IACzC,EAEA,OACEP,eAAC8E,WAAQ,CAAA5E,SAAA,CACPF,eAACS,EAAe,CAAAP,SAAA,CACdC,cAAA,MAAIF,UAAU,SAAQC,SAAC,qBACvBC,cAAA,QAAAD,SAAM,yCAENF,eAAA,QAAM+E,SAAUzC,EAAapC,SAAA,CAC3BC,cAACV,EAAS,CACRuF,KAAK,QACLJ,KAAK,QACLrE,MAAOQ,EACPnB,MAAM,QACNS,SAAUV,EACVsF,UAAQ,IAGV9E,cAACV,EAAS,CACRuF,KAAK,WACLJ,KAAK,WACLrE,MAAOS,EACPpB,MAAM,WACNS,SAAUV,EACVsF,UAAQ,IAGVjF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAC+E,IAAY,CAACjF,UAAU,gBAAgB+E,KAAK,SAAQ9E,SAAC,YAItDF,eAACkF,IAAY,CAACC,WAAW,SAASC,QAASlB,EAAahE,SAAA,CACrD,IACDC,cAAA,OAAKF,UAAU,OAAMC,SACnBC,cAAA,OAAKkF,IAAI,0BAA0BC,IAAI,aACnC,SACC,gBAMfnF,cAACoF,IAAU,CACTC,KAAM9D,EACN+D,MAAOpD,EACPqD,QAAQ,SACRC,MAAO7D,EACP8D,QAAQ,gDAIhB,EC5IaC,EAAsBnF,IAAOC,IAAGC,MAAAC,YAAA,iCAIhCiF,EAAapF,IAAOC,IAAGoF,MAAAlF,YAAA,YAIvBmF,EAAmBtF,IAAOC,IAAGsF,MAAApF,YAAA,gNCkBpCC,EAAoB,CACxBC,MAAO,GACPC,SAAU,GACVkF,gBAAiB,GACjBC,YAAa,IAmJAC,EAhJA,WACb,IAAAlF,EAAoCC,mBAASL,GAAkBM,EAAAC,YAAAH,EAAA,GAAxDI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GACxBL,EAAkDO,EAAlDP,MAAOC,EAA2CM,EAA3CN,SAAUkF,EAAiC5E,EAAjC4E,gBAAiBC,EAAgB7E,EAAhB6E,YAC1C3E,EAA0BL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA0BT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEtBwE,EAAwCpE,qBAAWC,KAA3CoE,EAAWD,EAAXC,YAAatE,EAAcqE,EAAdrE,eACboB,EAAcnB,qBAAWG,KAAzBgB,UAEFf,EAAY,WAChBV,GAAUD,EACZ,EAEMY,EAAY,eAAA5C,EAAA6C,YAAAC,cAAAC,MAAG,SAAAC,EAAOC,GAAK,IAAA4D,EAAA3D,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACR,GAAvBL,EAAMM,iBAEFjC,IAAakF,EAAe,CAAApD,EAAAE,KAAA,QAElB,OADZjB,EAAS,2BACTM,IAAYS,EAAAe,OAAA,wBAAAf,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKWwD,YACrBzF,EACAC,GACA,KAAD,EAEoB,OAFpBuF,EAAAzD,EAAAK,KAHOP,EAAI2D,EAAJ3D,KAKRZ,EAAeY,GAAME,EAAAE,KAAA,GAEfyD,YAA2B7D,EAAM,CAAEuD,cAAa/C,cAAa,KAAD,GAGlE7B,EAAcT,GAAmBgC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAEd,8BAAfA,EAAAW,GAAME,OACR5B,EAAS,6CACTM,IACAd,EAAcT,IAEG,uBAAfgC,EAAAW,GAAME,MACR5B,EAAS,2CACTM,IACAd,EAAcT,KAEdiB,EAAS,uCACTR,EAAcT,GAEduC,QAAQC,IAAI,qCAAoCR,EAAAW,KACjD,yBAAAX,EAAAgB,OAAA,GAAApB,EAAA,mBAEJ,gBAtCiBqB,GAAA,OAAArE,EAAAsE,MAAA,KAAAC,UAAA,KAwCZtE,EAAe,SAACgD,GACpB,IAAA+B,EAAwB/B,EAAMgC,OAAtBC,EAAIF,EAAJE,KAAMrE,EAAKmE,EAALnE,MAEdgB,EAAanB,wBAAC,CAAC,EAAIkB,GAAU,GAAAuD,YAAA,GAAGD,EAAOrE,IACzC,EAUA,OAJAmG,qBAAU,WAHRnF,EAAcT,EAKhB,GAAG,CAACwF,IAGFtG,eAAC8E,WAAQ,CAAA5E,SAAA,CACPC,cAAC0F,EAAmB,CAAA3F,SAClBF,eAAC8F,EAAU,CAAA5F,SAAA,CACTC,cAAA,MAAIF,UAAU,eAAcC,SAAC,2BAC7BC,cAAA,QAAAD,SAAM,yCAENF,eAAA,QAAMC,UAAU,eAAe8E,SAAUzC,EAAapC,SAAA,CACpDC,cAACV,EAAS,CACRuF,KAAK,OACLJ,KAAK,cACLrE,MAAO4F,EACP9F,SAAUV,EACVC,MAAM,eACNqF,UAAQ,IAGV9E,cAACV,EAAS,CACRuF,KAAK,QACL2B,aAAa,QACb/B,KAAK,QACLrE,MAAOQ,EACPV,SAAUV,EACVC,MAAM,QACNqF,UAAQ,IAGV9E,cAACV,EAAS,CACRuF,KAAK,WACL2B,aAAa,eACb/B,KAAK,WACLrE,MAAOS,EACPX,SAAUV,EACVC,MAAM,WACNqF,UAAQ,IAGV9E,cAACV,EAAS,CACRuF,KAAK,WACL2B,aAAa,eACb/B,KAAK,kBACLrE,MAAO2F,EACP7F,SAAUV,EACVC,MAAM,mBACNqF,UAAQ,IAGV9E,cAAC6F,EAAgB,CAAA9F,SACfC,cAAC+E,IAAY,CACXjF,UAAU,gBACV+E,KAAK,SACLD,SAAUzC,EAAapC,SACxB,sBAQTC,cAACoF,IAAU,CACTC,KAAM9D,EACN+D,MAAOpD,EACPqD,QAAQ,SACRC,MAAO7D,EACP8D,QAAQ,+CAIhB,E,eCvJegB,UAXQ,WACnB,OACIzG,cAAC0G,IAAY,CAAA3G,SACTF,eAAA,OAAKC,UAAU,sBAAqBC,SAAA,CAChCC,cAACc,EAAM,CAAChB,UAAU,YAClBE,cAACiG,EAAM,CAACnG,UAAU,gBAIlC,C","file":"static/js/4.bdfc5779.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n//import { FormInputContainer, FormField, Label } from './form-input.styles'\r\n\r\nimport './form-input.styles.scss';\r\n\r\n/* Functional Component. No State Needed */\r\n/* Destructure FormInput Component */\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n    <div className=\"group\">\r\n    <input className='form-input' onChange={ handleChange } { ...otherProps } />\r\n\r\n    {/* Generates a label if one is passed,\r\n    otherwise, render nothing */}\r\n    {\r\n        label ?\r\n        (<label\r\n            /* Interpolate string value otherProps and apply class of 'shrink'\r\n                Otherwise, it will be a value of an empty string. */\r\n            className={ `${otherProps.value.length ? 'shrink' : '' } form-input-label`}>\r\n        \r\n            {/* Render the label text */}\r\n            {label}\r\n        </label>)\r\n        : null\r\n    }\r\n</div>\r\n)\r\n\r\nexport default FormInput;","import styled from 'styled-components'\r\n\r\nexport const SignInContainer = styled.div`\r\n    max-width: 440px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    &.disabled {\r\n        pointer-events: none;\r\n        opacity: 0.5\r\n    }\r\n\r\n    .title {\r\n        margin: 10px 0;\r\n    }\r\n\r\n    .buttons {\r\n        position: absolute;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-items: space-between;\r\n        gap: 1em;\r\n        width: 70%;\r\n\r\n        \r\n\r\n        @media (width < 540px) {\r\n            \r\n            flex-direction: column;\r\n        }\r\n\r\n        span {\r\n            width: 100%;\r\n            text-align: center;\r\n        }\r\n    } \r\n\r\n    .logo {\r\n        width: 50px;\r\n        height: 50px;\r\n    }\r\n\r\n     img {\r\n        object-fit: contain;\r\n        width: 50px;\r\n        height: 50px;\r\n        padding-right: 10px;\r\n    }\r\n`\r\n\r\n\r\n   ","import React, { useState, useContext, Fragment } from \"react\";\r\nimport FormInput from \"../../components/form-input/form-input.component\";\r\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\r\nimport GlassModal from \"../glass-popup/glass-popup.component\";\r\n\r\nimport { UserContext } from \"../../context/user.context\";\r\nimport { CartContext } from \"../../context/cart.context\";\r\n\r\nimport { SignInContainer } from \"./sign-in.styles\";\r\n\r\nimport {\r\n  auth,\r\n  signInWithGooglePopup,\r\n  createUserDocumentFromAuth,\r\n  signInAuthUserWithEmailAndPassword,\r\n  getCartItems,\r\n} from \"../../utils/firebase/firebase.utils.js\";\r\n\r\nconst defaultFormFields = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\n/* Create a class component to store state */\r\nconst SignIn = () => {\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const [modal, setModal] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const { email, password } = formFields;\r\n  const { setCurrentUser } = useContext(UserContext);\r\n  const { setCartItems } = useContext(CartContext);\r\n\r\n  const showModal = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const user = await signInAuthUserWithEmailAndPassword(email, password);\r\n\r\n      setCurrentUser(user);\r\n      setCartItems(user.cartItems);\r\n      console.log(\r\n        \"SIGNED IN: \" +\r\n          JSON.stringify(user) +\r\n          \": \" +\r\n          JSON.stringify(user.cartItems)\r\n      );\r\n\r\n      /* Clear out the state */\r\n      setFormFields(defaultFormFields);\r\n    } catch (error) {\r\n      switch (error.code) {\r\n        case \"auth/wrong-password\":\r\n          setError(\"Incorrect password for email.\");\r\n          showModal();\r\n          setFormFields((prevFormFields) => ({\r\n            ...prevFormFields,\r\n            password: \"\",\r\n          }));\r\n          break;\r\n        case \"auth/user-not-found\":\r\n          setError(\"User not found.\");\r\n          showModal();\r\n          setFormFields(defaultFormFields);\r\n          break;\r\n        default:\r\n          console.log(\"ERROR: \" + error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const googleSignIn = async () => {\r\n    const { user } = await signInWithGooglePopup();\r\n    // const userDocRef = await createUserDocumentFromAuth(user)\r\n    //setCurrentUser(user)\r\n    //setCartItems(getCartItems(currentUser))\r\n    const userItems = await getCartItems(user);\r\n    setCartItems(userItems);\r\n    //console.log(\"CURRENT GOOGLE USER: \" + JSON.stringify(userDocRef))\r\n  };\r\n\r\n  /* Handles the change of Input  AND password fields*/\r\n  const handleChange = (event) => {\r\n    /* Pull value and name off of target */\r\n    const { value, name } = event.target;\r\n\r\n    setFormFields({ ...formFields, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <SignInContainer>\r\n        <h3 className='maroon'>Have an account?</h3>\r\n        <span>Sign in with your email and password</span>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <FormInput\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            label='Email'\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          <FormInput\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            label='Password'\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          <div className='buttons'>\r\n            <CustomButton className='custom-button' type='submit'>\r\n              Sign In\r\n            </CustomButton>\r\n\r\n            <CustomButton buttonType='google' onClick={googleSignIn}>\r\n              {\" \"}\r\n              <div className='logo'>\r\n                <img src='../../images/google.png' alt='Google' />\r\n              </div>\r\n              Google{\" \"}\r\n            </CustomButton>\r\n          </div>\r\n        </form>\r\n      </SignInContainer>\r\n\r\n      <GlassModal\r\n        show={modal}\r\n        close={showModal}\r\n        titleBG='Alert!'\r\n        title={error}\r\n        content='Please verify the information is correct.'\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import styled from 'styled-components'\r\n\r\nexport const SignUpFormContainer = styled.div`\r\n    max-width: 450px;\r\n`\r\n\r\nexport const SignUpForm = styled.div`\r\n\r\n`\r\n\r\nexport const ButtonsContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-items: space-between;\r\n    gap: 1em;\r\n\r\n    @media (width < 540px) {\r\n        .custom-button {\r\n            width: 100%;\r\n        }\r\n    }\r\n`","import React, { useState, useContext, useEffect, Fragment } from \"react\";\r\n\r\n// import { connect } from \"react-redux\";\r\n// import { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\n// import { createStructuredSelector } from \"reselect\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport GlassModal from \"../glass-popup/glass-popup.component\";\r\n\r\nimport { UserContext } from \"../../context/user.context\";\r\nimport { CartContext } from \"../../context/cart.context\";\r\n\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport {\r\n  auth,\r\n  createUserDocumentFromAuth,\r\n  createAuthUserWithEmailAndPassword,\r\n} from \"../../utils/firebase/firebase.utils\";\r\n\r\nimport {\r\n  SignUpFormContainer,\r\n  SignUpForm,\r\n  ButtonsContainer,\r\n} from \"./sign-up.styles.jsx\";\r\n\r\n//import './sign-up.styles.scss';\r\n\r\nconst defaultFormFields = {\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n  displayName: \"\",\r\n};\r\n\r\nconst SignUp = () => {\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { email, password, confirmPassword, displayName } = formFields;\r\n  const [modal, setModal] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { currentUser, setCurrentUser } = useContext(UserContext);\r\n  const { cartItems } = useContext(CartContext);\r\n\r\n  const showModal = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match!\");\r\n      showModal();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { user } = await createAuthUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n\r\n      setCurrentUser(user);\r\n\r\n      await createUserDocumentFromAuth(user, { displayName, cartItems });\r\n\r\n      // Clear out the form //\r\n      setFormFields(defaultFormFields);\r\n    } catch (error) {\r\n      if (error.code === \"auth/email-already-in-use\") {\r\n        setError(\"Cannot create user. Email already in use.\");\r\n        showModal();\r\n        setFormFields(defaultFormFields);\r\n      }\r\n      if (error.code === \"auth/weak-password\") {\r\n        setError(\"Password must be at least 6 characters.\");\r\n        showModal();\r\n        setFormFields(defaultFormFields);\r\n      } else {\r\n        setError(\"User creation encountered an error.\");\r\n        setFormFields(defaultFormFields);\r\n\r\n        console.log(\"User creation encountered an error\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormFields({ ...formFields, [name]: value });\r\n  };\r\n\r\n  const updateFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateFields();\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <SignUpFormContainer>\r\n        <SignUpForm>\r\n          <h3 className='title maroon'>Don't have an account?</h3>\r\n          <span>Sign up with your email and password</span>\r\n\r\n          <form className='sign-up-form' onSubmit={handleSubmit}>\r\n            <FormInput\r\n              type='text'\r\n              name='displayName'\r\n              value={displayName}\r\n              onChange={handleChange}\r\n              label='Display Name'\r\n              required\r\n            />\r\n\r\n            <FormInput\r\n              type='email'\r\n              autoComplete='email'\r\n              name='email'\r\n              value={email}\r\n              onChange={handleChange}\r\n              label='Email'\r\n              required\r\n            />\r\n\r\n            <FormInput\r\n              type='password'\r\n              autoComplete='new-password'\r\n              name='password'\r\n              value={password}\r\n              onChange={handleChange}\r\n              label='Password'\r\n              required\r\n            />\r\n\r\n            <FormInput\r\n              type='password'\r\n              autoComplete='new-password'\r\n              name='confirmPassword'\r\n              value={confirmPassword}\r\n              onChange={handleChange}\r\n              label='Confirm Password'\r\n              required\r\n            />\r\n\r\n            <ButtonsContainer>\r\n              <CustomButton\r\n                className='custom-button'\r\n                type='submit'\r\n                onSubmit={handleSubmit}\r\n              >\r\n                SIGN UP\r\n              </CustomButton>\r\n            </ButtonsContainer>\r\n          </form>\r\n        </SignUpForm>\r\n      </SignUpFormContainer>\r\n\r\n      <GlassModal\r\n        show={modal}\r\n        close={showModal}\r\n        titleBG='Alert!'\r\n        title={error}\r\n        content='Please try re-entering your information.'\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = createStructuredSelector({\r\n// \tcart: selectCartItems,\r\n// });\r\n\r\n// export default connect(mapStateToProps)(SignUp);\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\n\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\nimport AnimatedPage from '../../components/animated-page/animated-page.component'\r\n\r\nimport './authentication.styles.scss';\r\n\r\n/* Houses the Sign In and Sign Out Components */\r\nconst Authentication = () => {\r\n    return (\r\n        <AnimatedPage>\r\n            <div className='sign-in-and-sign-up'>\r\n                <SignIn className='sign-in' />\r\n                <SignUp className='sign-up' />\r\n            </div>\r\n        </AnimatedPage>\r\n    )\r\n};\r\n\r\nexport default Authentication;"],"sourceRoot":""}