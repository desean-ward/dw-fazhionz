{"version":3,"sources":["routes/checkout/checkout-form.js","components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.jsx","routes/checkout/checkout.styles.jsx","routes/checkout/checkout.component.jsx"],"names":["CheckoutForm","stripe","useStripe","elements","useElements","_useState","useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","isProcessing","setIsProcessing","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","_yield$stripe$confirm","error","wrap","_context","prev","next","preventDefault","abrupt","confirmPayment","confirmParams","return_url","concat","window","location","origin","sent","type","stop","_x","apply","arguments","_jsxs","id","onSubmit","children","_jsx","PaymentElement","disabled","ItemContainer","styled","div","_templateObject","_taggedTemplateLiteral","ImageContainer","_templateObject2","InfoContainer","_templateObject3","Name","span","_templateObject4","Quantity","_templateObject5","Price","_templateObject6","RemoveBtn","_templateObject7","CheckoutItem","cartItem","cartItems","useSelector","selectCartItems","dispatch","useDispatch","currentUser","useContext","UserContext","isVisible","setIsVisible","name","imageUrl","price","quantity","newItemTotal","Number","toFixed","qty","setQty","inputRef","useRef","variants","initial","opacity","scale","animate","exit","motion","transition","duration","style","pointerEvents","className","src","alt","onClick","removeItem","BiMinus","ref","onChange","console","log","target","value","length","parseInt","addItem","current","setTimeout","updateCartInDB","select","onKeyUp","keyCode","blur","onBlur","deleteItem","_ref2","clearItemFromCart","BiPlus","handleDeleteFromCart","MdOutlineDeleteForever","CheckoutPageContainer","CheckoutHeaderContainer","CartItemsContainer","TotalContainer","CheckoutMessageContainer","ButtonContainer","Checkout","total","newTotal","setNewTotal","stripePromise","setStripePromise","_useState5","_useState6","clientSecret","setClientSecret","useEffect","fetch","then","r","_yield$r$json","publishableKey","json","loadStripe","method","body","JSON","stringify","_callee2","result","_yield$result$json","_context2","_x2","map","item","AnimatedPage","_Fragment","Elements","options"],"mappings":"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","file":"static/js/13.86cbd1ee.chunk.js","sourcesContent":["import { PaymentElement } from \"@stripe/react-stripe-js\";\r\nimport { useState } from \"react\";\r\nimport { useStripe, useElements } from \"@stripe/react-stripe-js\";\r\n\r\n// import \"./checkout-form.css\";\r\n\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n\r\n    const { error } = await stripe.confirmPayment({\r\n      elements,\r\n      confirmParams: {\r\n        // Make sure to change this to your payment completion page\r\n        return_url: `${window.location.origin}/completion`,\r\n      },\r\n    });\r\n\r\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n      setMessage(error.message);\r\n    } else {\r\n      setMessage(\"An unexpected error occured.\");\r\n    }\r\n\r\n    setIsProcessing(false);\r\n  };\r\n\r\n  return (\r\n    <form id='payment-form' onSubmit={handleSubmit}>\r\n      <PaymentElement id='payment-element' />\r\n      <button disabled={isProcessing || !stripe || !elements} id='submit'>\r\n        <span id='button-text'>\r\n          {isProcessing ? \"Processing ... \" : \"Pay now\"}\r\n        </span>\r\n      </button>\r\n      {/* Show any error or success messages */}\r\n      {message && <div id='payment-message'>{message}</div>}\r\n    </form>\r\n  );\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const ItemContainer = styled.div`\r\n    //position: relative;\r\n\twidth: 100%;\r\n    //height: 50%;\r\n\tdisplay: flex;\r\n\tpadding: 0.5em 0;\r\n\t//font-size: 20px;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\ttransition: all 0.3s ease-in-out;\r\n\r\n    .sect {\r\n        //position: relative;\r\n        display: flex;\r\n        width: 25%;\r\n        //margin-left: 0;\r\n        align-items: center;\r\n\r\n        :last-child {\r\n            width: 12%;\r\n\r\n        }\r\n    }\r\n\r\n    &:hover, &:active {\r\n    background-color: rgba(0, 0, 0, .05);\r\n    }  \r\n\r\n    &:last-child {\r\n        //border-bottom: 1px solid darkgrey;\r\n    }\r\n\r\n    @media (orientation: portrait) {\r\n        //font-size: 19px;\r\n        //width: 95%;\r\n    }\r\n\r\n    @media only screen and (max-width: 900px) {\r\n        //padding-right: 5px;\r\n    }\r\n`\r\n\r\nexport const ImageContainer = styled.div`\r\n    width: 12.5%;\r\n    height: 125px;\r\n    //padding-right: 15px;\r\n    //height: 100px;\r\n    object-fit: stretch;\r\n    overflow: hidden;\r\n\r\n    img {\r\n        width: 100%;\r\n        object-fit: stretch;\r\n        overflow: hidden;\r\n    }\r\n`\r\n\r\nexport const InfoContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    gap: 1.5em;\r\n    padding-left: 7.5em;\r\n\r\n   \r\n    // @media only screen and (max-width: 600px) {\r\n    //     display: grid;\r\n    //     grid-template-columns: 1fr auto;\r\n    //     grid-template-areas: \r\n    //         '  name      remove '\r\n    //         '  quantity  price ';\r\n    //     gap: 10px;\r\n\r\n    //     width: 100%;\r\n\r\n    //     .name { width: 100%; }\r\n    //     .remove-button, .price { \r\n    //         justify-self: right;\r\n    //         margin-right: 10px; \r\n    //     }\r\n    //     .price { margin-right: 26px; }\r\n    // }\r\n`\r\n\r\nexport const Name = styled.span`\r\n    grid-area: name;\r\n    //width: 28%;\r\n\r\n    @media only screen and (max-width: 800px) {\r\n        //font-size: 16px;\r\n    }\r\n`\r\n\r\nexport const Quantity = styled.span`\r\n    grid-area: quantity;\r\n    //position: relative;\r\n    //width: 25%;\r\n    //left: 25px;\r\n    display: flex;\r\n    margin-left: -1.25em;\r\n    //height: 22px;\r\n\r\n    @media (width <= 700px) {\r\n        margin-left: -2em;\r\n    }\r\n\r\n    .arrow {\r\n      cursor: pointer;\r\n      border: 1px solid darkgrey;\r\n      display: flex;\r\n\r\n      @media (width <= 700px) {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    \r\n\r\n    .value {\r\n      display: flex;\r\n      text-align: center;\r\n      margin: 0 15px;\r\n      width: 60px;\r\n      background-color: white;\r\n    }\r\n\r\n    @media only screen and (min-width: 700px) {\r\n        top: 6px;\r\n    }\r\n\r\n    @media only screen and (max-width: 600px) {\r\n        left: 0;\r\n    }\r\n`\r\n\r\nexport const Price = styled.span`\r\n    grid-area: price;\r\n    padding: 0 0.5em;\r\n    margin: 0 auto;\r\n`\r\n\r\nexport const RemoveBtn = styled.div`\r\n    grid-area: remove;\r\n    //width: 20%;\r\n    text-align: center;\r\n    margin-right: 0.5em;\r\n    cursor: pointer;\r\n\r\n    .trash-icon {\r\n        width: 30px;\r\n        height: 30px;\r\n        \r\n    }\r\n\r\n    &:hover {\r\n      color: maroon;\r\n    }\r\n`","/************************************************************************\r\n \r\nIndividual items listed on the check out page.\r\n\r\n*************************************************************************/\r\n\r\nimport React, { useState, useContext, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { MdOutlineDeleteForever } from \"react-icons/md\";\r\nimport { BiPlus, BiMinus } from \"react-icons/bi\";\r\n\r\nimport {\r\n  clearItemFromCart,\r\n  addItem,\r\n  removeItem,\r\n  clearCart,\r\n} from \"../../redux/cart/cart.actions\";\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\n// import { CartContext } from '../../context/cart.context'\r\n\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport {\r\n  ItemContainer,\r\n  InfoContainer,\r\n  ImageContainer,\r\n  Name,\r\n  Quantity,\r\n  Price,\r\n  RemoveBtn,\r\n} from \"./checkout-item.styles\";\r\nimport { updateCartInDB } from \"../../utils/firebase/firebase.utils\";\r\nimport { getCurrentUrl } from \"swup/lib/helpers\";\r\nimport { UserContext } from \"../../context/user.context\";\r\n\r\nconst CheckoutItem = ({ cartItem }) => {\r\n  // const { cartItems, setCartItems } = useContext(CartContext)\r\n  // const { addItemToCart, removeItemFromCart, deleteItemFromCart } = useContext(CartContext)\r\n  const cartItems = useSelector(selectCartItems);\r\n  const dispatch = useDispatch();\r\n  const { currentUser } = useContext(UserContext);\r\n\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const { name, imageUrl, price, quantity } = cartItem;\r\n  const newPrice = price - price * 0.15;\r\n  const itemTotal = Number(newPrice) * quantity;\r\n  const newItemTotal = itemTotal.toFixed(2);\r\n\r\n  const [qty, setQty] = useState(quantity);\r\n  const inputRef = useRef(quantity);\r\n  let updatedQty = quantity;\r\n\r\n  const variants = {\r\n    initial: { opacity: 1, scale: 1 },\r\n    animate: { opacity: isVisible ? 1 : 0, scale: isVisible ? 1 : 0 },\r\n    exit: { opacity: 0, scale: 0 },\r\n  };\r\n\r\n  const handleQtyClick = (e) => {\r\n    e.target.select();\r\n  };\r\n\r\n  /* Adds or Removes an item and updates the quantity */\r\n  const handleQtyChange = (e) => {\r\n    console.log(\"QUANTITY:\", e.target.value);\r\n    if (e.target.value.length !== 0) {\r\n      setQty(parseInt(e.target.value));\r\n      cartItem.quantity = qty;\r\n\r\n      dispatch(addItem(cartItem));\r\n    } else {\r\n      if (inputRef.current.value === \"0\" || inputRef.current.value === \"\") {\r\n        cartItem.quantity = 0;\r\n        setIsVisible(false);\r\n\r\n        const removeItem = () => {\r\n          if (cartItem) {\r\n            dispatch(removeItem(cartItem));\r\n            // setCartItems([]);\r\n          }\r\n        };\r\n\r\n        const myTimeout = setTimeout(removeItem, 400);\r\n      }\r\n\r\n      updateCartInDB(currentUser, cartItems);\r\n    }\r\n  };\r\n\r\n  //   const clearTheCart = () => {\r\n  //     setCartItems([]);\r\n  //   };\r\n\r\n  /* Removes the entire item from cart IF the quantity is '0' */\r\n  const handleOnBlur = () => {\r\n    if (inputRef.current.value === \"0\" || inputRef.current.value === \"\") {\r\n      cartItem.quantity = 1;\r\n      setIsVisible(false);\r\n\r\n      const deleteItem = async () => {\r\n        if (cartItem) {\r\n          dispatch(clearItemFromCart(cartItem));\r\n          //setCartItems(...cartItem, {quantity: 0})\r\n        }\r\n\r\n        await updateCartInDB(currentUser, cartItems);\r\n      };\r\n\r\n      const myTimeout = setTimeout(deleteItem, 400);\r\n    }\r\n  };\r\n\r\n  const handleKeyUp = (e) => {\r\n    // if (itemTotal === 0) {\r\n    //     inputRef.current.value = \"\";\r\n    // }\r\n\r\n    if (e.keyCode === 13) inputRef.current.blur();\r\n  };\r\n\r\n  /* Deletes the entire item quantity from the cart */\r\n  const handleDeleteFromCart = (cartItem) => {\r\n    setIsVisible(false);\r\n\r\n    const deleteItem = () => {\r\n      if (cartItem) {\r\n        dispatch(clearItemFromCart(cartItem));\r\n      } else {\r\n        console.log(\"NO ITEM TO DELETE\");\r\n      }\r\n\r\n      updateCartInDB(currentUser, cartItems);\r\n    };\r\n\r\n    const myTimeout = setTimeout(deleteItem, 400);\r\n\r\n    //updateCartInDB(currentUser, cartItems)\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial='initial'\r\n      animate='animate'\r\n      exit='exit'\r\n      variants={variants}\r\n      transition={{ duration: 0.5 }}\r\n      style={{ pointerEvents: isVisible ? \"auto\" : \"none\" }}\r\n    >\r\n      <ItemContainer className='checkout-item'>\r\n        <ImageContainer className='image-container                                                                                                                                                                                                                        '>\r\n          <img src={imageUrl} alt='item' />\r\n        </ImageContainer>\r\n\r\n        <InfoContainer>\r\n          <Name className='name sect'>{name}</Name>\r\n\r\n          <Quantity className='quantity sect'>\r\n            <div\r\n              className='arrow'\r\n              onClick={() => dispatch(removeItem(cartItem))}\r\n            >\r\n              <BiMinus />\r\n            </div>\r\n            <input\r\n              type='input'\r\n              id='value'\r\n              className='value'\r\n              ref={inputRef}\r\n              onChange={handleQtyChange}\r\n              onClick={handleQtyClick}\r\n              onKeyUp={handleKeyUp}\r\n              onBlur={handleOnBlur}\r\n              value={cartItem.quantity}\r\n            />\r\n            <div className='arrow' onClick={() => dispatch(addItem(cartItem))}>\r\n              <BiPlus />\r\n            </div>\r\n          </Quantity>\r\n\r\n          <Price className='price sect'>${newItemTotal}</Price>\r\n\r\n          <RemoveBtn\r\n            className='remove-button sect'\r\n            onClick={() => handleDeleteFromCart(cartItem)}\r\n          >\r\n            {<MdOutlineDeleteForever className='trash-icon' />}\r\n          </RemoveBtn>\r\n        </InfoContainer>\r\n      </ItemContainer>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     addItem: item => dispatch(addItem(item)),\r\n//     removeItem: item => dispatch(removeItem(item)),\r\n//     clearItem: item => dispatch(clearItemFromCart(item))\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(CheckoutItem);\r\n\r\nexport default CheckoutItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n  width: 100%;\r\n  padding: 0 15%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  margin-bottom: -75vh;\r\n  margin-top: 4em;\r\n  scrollbar-width: thin;\r\n\r\n  @media (width <= 900px) {\r\n    padding: 0 5%;\r\n  }\r\n\r\n  // @media screen and (max-width: 900px) {\r\n  //     position: relative;\r\n  //     width: 85vw;\r\n  //     min-height: 60vh;\r\n  //     //height: 100vh;\r\n  //     top: -5vh;\r\n  //     margin-bottom: -80vh;\r\n  // }\r\n`;\r\n\r\nexport const CheckoutHeaderContainer = styled.div`\r\n  width: 100%;\r\n  //height: 40%;\r\n  font-size: 1.4rem;\r\n  font-weight: bold;\r\n  text-align: left;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid darkgrey;\r\n\r\n  .header-block {\r\n    text-transform: capitalize;\r\n    width: 20%;\r\n\r\n    &.description {\r\n      position: relative;\r\n      //left: -30px;\r\n    }\r\n\r\n    &:last-child {\r\n      width: 12%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    font-size: clamp(0.8rem, 2.4vw, 2rem);\r\n  }\r\n`;\r\n\r\nexport const CartItemsContainer = styled.div`\r\n  //min-height: 10vh;\r\n  //max-height: 50vh;\r\n  margin-top: 20px;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  scrollbar-width: thin;\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  //font-size: 36px;\r\n  border-top: 1px solid black;\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    //font-size: 28px;\r\n  }\r\n`;\r\n\r\nexport const CheckoutMessageContainer = styled.div`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-top: 30px;\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  margin-left: auto;\r\n  margin-top: 10px;\r\n`;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"./checkout-form\";\r\n\r\n// import { stripePromise } from \"../../utils/stripe/stripe.utils\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal,\r\n} from \"../../redux/cart/cart.selectors\";\r\n// import { UserContext } from \"../../context/user.context\";\r\n\r\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\r\n\r\n// import StripeCheckoutButton from \"../../components/stripe-button/stripe-button.component\";\r\n// import CustomButton from \"../../components/custom-button/custom-button.component\";\r\nimport AnimatedPage from \"../../components/animated-page/animated-page.component\";\r\n\r\nimport {\r\n  CheckoutPageContainer,\r\n  CheckoutHeaderContainer,\r\n  CartItemsContainer,\r\n  TotalContainer,\r\n  CheckoutMessageContainer,\r\n  ButtonContainer,\r\n} from \"./checkout.styles\";\r\n// import PaymentForm from \"../../components/payment-form/payment-form.component\";\r\n\r\nconst Checkout = () => {\r\n  const cartItems = useSelector(selectCartItems);\r\n  let total = 0;\r\n  const [newTotal, setNewTotal] = useState(0);\r\n  const [stripePromise, setStripePromise] = useState(null);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"/config\").then(async (r) => {\r\n      const { publishableKey } = await r.json();\r\n      setStripePromise(loadStripe(publishableKey));\r\n      console.log(\"Stripe Promise: \", stripePromise);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/create-payment-intent\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({}),\r\n    }).then(async (result) => {\r\n      var { clientSecret } = await result.json();\r\n      setClientSecret(clientSecret);\r\n    });\r\n    console.log(\"CLIENT SECRET:\", clientSecret);\r\n  }, []);\r\n\r\n  // const handleCheckout = async (e) => {\r\n  //   e.preventDefault();\r\n\r\n  //   try {\r\n  //     const res = await fetch(\"/create-checkout-session\", {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //       },\r\n  //       body: JSON.stringify({\r\n  //         items: cartItems,\r\n  //       }),\r\n  //     });\r\n\r\n  //     if (res.ok) return res.json();\r\n  //     window.location = res.url;\r\n  //   } catch (error) {\r\n  //     console.log(\"ERROR: \", error);\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const totalTheCart = () =>\r\n      cartItems.map((item) => {\r\n        return (total += item.quantity * item.price);\r\n      });\r\n\r\n    totalTheCart();\r\n\r\n    setNewTotal(total - total * 0.15);\r\n\r\n    console.log(\"UPDATED CHECKOUT TOTAL: \" + newTotal);\r\n  }, [cartItems, total]);\r\n\r\n  return (\r\n    <AnimatedPage>\r\n      <CheckoutPageContainer className='checkout-page'>\r\n        <CheckoutHeaderContainer className='checkout-header maroon'>\r\n          <div className='header-block'>\r\n            <span>Product</span>\r\n          </div>\r\n\r\n          <div className='header-block description'>\r\n            <span>Description</span>\r\n          </div>\r\n\r\n          <div className='header-block'>\r\n            <span>Quantity</span>\r\n          </div>\r\n\r\n          <div className='header-block'>\r\n            <span>Subtotal</span>\r\n          </div>\r\n\r\n          <div className='header-block'>\r\n            <span>Remove</span>\r\n          </div>\r\n        </CheckoutHeaderContainer>\r\n\r\n        {cartItems ? (\r\n          <CartItemsContainer className='cart-items'>\r\n            {cartItems.map((cartItem) => (\r\n              <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n            ))}\r\n          </CartItemsContainer>\r\n        ) : null}\r\n\r\n        <TotalContainer className='total'>\r\n          <span>\r\n            <h3>TOTAL: ${newTotal.toFixed(2)}</h3>\r\n          </span>\r\n        </TotalContainer>\r\n\r\n        <CheckoutMessageContainer className='checkoutMessage maroon'>\r\n          <p>\r\n            ** Please use the following test card information for payment! **\r\n            <br />\r\n            <br />\r\n            4242 4242 4242 4242\r\n            <br />\r\n            Exp: 12/28\r\n            <br />\r\n            CVV: 123\r\n          </p>\r\n        </CheckoutMessageContainer>\r\n        <ButtonContainer className='button'>\r\n          {newTotal > 0 ? (\r\n            <>\r\n              <h3>Checkout</h3>\r\n              {clientSecret && stripePromise && (\r\n                <Elements stripe={stripePromise} options={{ clientSecret }}>\r\n                  <CheckoutForm />\r\n                </Elements>\r\n              )}\r\n            </>\r\n          ) : null}\r\n        </ButtonContainer>\r\n      </CheckoutPageContainer>\r\n    </AnimatedPage>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"sourceRoot":""}