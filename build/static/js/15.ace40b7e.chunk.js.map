{"version":3,"sources":["components/category-view/category-view.styles.jsx","components/category-view/category-view.component.jsx","routes/shop/shop.styles.jsx","routes/shop/shop.component.jsx"],"names":["CategoryViewContainer","styled","div","_templateObject","_taggedTemplateLiteral","TitleContainer","_templateObject2","CategoryItem","lazy","CategoryView","categoriesMap","useSelector","selectCategoriesMap","category","useParams","_useState","useState","_useState2","_slicedToArray","products","setProducts","useEffect","_jsx","AnimatedPage","children","className","_jsxs","toUpperCase","map","product","Suspense","item","title","id","ShopContainer","ShopPage","_ref","updatedCollections","dispatch","useDispatch","getCategoriesMap","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","categoriesArray","wrap","_context","prev","next","getCategoriesAndDocuments","sent","setCategories","stop","apply","arguments","getProductDescription","_ref3","_callee2","descriptions","_context2","getProductDescriptions","setProductDescriptions","Routes","Route","index","element","Categories","path"],"mappings":"mOAEaA,EAAwBC,IAAOC,IAAGC,MAAAC,YAAA,00BA2ClCC,EAAiBJ,IAAOC,IAAGI,MAAAF,YAAA,mP,OChClCG,EAAeC,gBAAK,kBACxB,uCAAkD,IAwCrCC,EApCM,WACnB,IAAMC,EAAgBC,YAAYC,KAE1BC,EAAaC,cAAbD,SACRE,EAAgCC,mBAASN,EAAcG,IAAUI,EAAAC,YAAAH,EAAA,GAA1DI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAM5B,OAJAI,qBAAU,WACRD,EAAYV,EAAcG,GAC5B,GAAG,CAACA,EAAUH,IAGZY,cAACC,IAAY,CAAAC,SACXF,cAACtB,EAAqB,CAAAwB,SACpBF,cAAA,OAAKG,UAAU,gBAAeD,SAC5BE,eAAA,OAAKD,UAAU,mBAAkBD,SAAA,CAC/BF,cAACjB,EAAc,CAAAmB,SACbF,cAAA,MAAIG,UAAU,QAAOD,SAAEX,EAASc,kBAEjCR,GACCA,EAASS,KAAI,SAACC,GAAO,OACnBP,cAACQ,WAAQ,CAAAN,SACPF,cAACf,EAAY,CACXkB,UAAU,OAEVM,KAAMF,EACNG,MAAOnB,GAFFgB,EAAQI,KAHFJ,EAAQI,GAOZ,YAO3B,E,0BClDaC,EAAgBjC,IAAOC,IAAGC,MAAAC,YAAA,qCC+DxB+B,UAvCE,SAAHC,GAAwBA,EAAlBC,mBAA0B,IACtCC,EAAWC,cAqBjB,OAlBAlB,qBAAU,WACR,IAAMmB,EAAgB,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACOC,cAA4B,KAAD,EAAnDL,EAAeE,EAAAI,KACrBd,EAASe,YAAcP,IAAkB,wBAAAE,EAAAM,OAAA,GAAAT,EAAA,KAC1C,kBAHqB,OAAAJ,EAAAc,MAAA,KAAAC,UAAA,KAKhBC,EAAqB,eAAAC,EAAAhB,YAAAC,cAAAC,MAAG,SAAAe,IAAA,IAAAC,EAAA,OAAAjB,cAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EAEDY,cAAyB,KAAD,EAA7CF,EAAYC,EAAAT,KAGlBd,EAASyB,YAAuBH,IAAe,wBAAAC,EAAAP,OAAA,GAAAK,EAAA,KAChD,kBAN0B,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAQ3BhB,IACAiB,GACF,GAAG,CAACnB,IAGFhB,cAACY,EAAa,CAAAV,SACZF,cAACC,IAAY,CAAAC,SACXE,eAACsC,IAAM,CAAAxC,SAAA,CACLF,cAAC2C,IAAK,CAACC,OAAK,EAACC,QAAS7C,cAAC8C,IAAU,MACjC9C,cAAC2C,IAAK,CAACI,KAAK,YAAYF,QAAS7C,cAACb,EAAY,YAKxD,C","file":"static/js/15.ace40b7e.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const CategoryViewContainer = styled.div`\r\n    position: relative;\r\n\twidth: 100%;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\r\n    .category-view {\r\n        width: 100%;\r\n        display: flex;\r\n        margin-bottom: -5vw;\r\n\r\n        .category-content {\r\n            margin: 0 auto;\r\n            max-width: 1310px;\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            justify-content: start;\r\n            gap: .5em;\r\n\r\n            @media (width < 1305px) {\r\n                width: 976px;\r\n            }\r\n\r\n            @media (width < 976px) {\r\n                justify-content: center;\r\n\r\n                > :last-child {\r\n                    left: -160px;\r\n                }\r\n            }\r\n\r\n            @media (max-width: 648px) {\r\n                > :last-child {\r\n                    \r\n                    left: 0;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n`\r\n\r\nexport const TitleContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    max-width: 1300px;\r\n    margin-top: 9.5vh;\r\n\r\n    @media (width < 976px) {\r\n        text-align: center;\r\n    }\r\n\r\n    h2 {\r\n        display: inline;\r\n        margin-right: .5em;\r\n    }\r\n`","import React, { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { selectCategoriesMap } from \"../../redux/shop/shop.selectors\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport AnimatedPage from \"../animated-page/animated-page.component\";\r\n\r\nimport {\r\n  CategoryViewContainer,\r\n  TitleContainer,\r\n} from \"./category-view.styles.jsx\";\r\n\r\nconst CategoryItem = lazy(() =>\r\n  import(\"../category-item/category-item.component\")\r\n);\r\n\r\n//* This page displays the indiviual category after clicking 'View All' on the 'categories' page\r\nconst CategoryView = () => {\r\n  const categoriesMap = useSelector(selectCategoriesMap);\r\n\r\n  const { category } = useParams();\r\n  const [products, setProducts] = useState(categoriesMap[category]);\r\n\r\n  useEffect(() => {\r\n    setProducts(categoriesMap[category]);\r\n  }, [category, categoriesMap]);\r\n\r\n  return (\r\n    <AnimatedPage>\r\n      <CategoryViewContainer>\r\n        <div className='category-view'>\r\n          <div className='category-content'>\r\n            <TitleContainer>\r\n              <h3 className='title'>{category.toUpperCase()}</h3>\r\n            </TitleContainer>\r\n            {products &&\r\n              products.map((product) => (\r\n                <Suspense key={product.id}>\r\n                  <CategoryItem\r\n                    className='item'\r\n                    key={product.id}\r\n                    item={product}\r\n                    title={category}\r\n                  />\r\n                </Suspense>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </CategoryViewContainer>\r\n    </AnimatedPage>\r\n  );\r\n};\r\n\r\nexport default CategoryView;\r\n","import styled from 'styled-components'\r\n\r\nexport const ShopContainer = styled.div`\r\n    margin-bottom: -70vh;\r\n`","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Routes, Route, useNavigate, Outlet } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport Categories from \"../../components/categories/categories.component\";\r\nimport Category from \"../category/category.component\";\r\nimport CategoryView from \"../../components/category-view/category-view.component\";\r\nimport AnimatedPage from \"../../components/animated-page/animated-page.component\";\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nimport {\r\n  getCategoriesAndDocuments,\r\n  getProductDescriptions,\r\n} from \"../../utils/firebase/firebase.utils\";\r\n\r\nimport {\r\n  fetchCategoriesAsync,\r\n  setCategories,\r\n  setProductDescriptions,\r\n} from \"../../redux/shop/shop.actions\";\r\n\r\nimport { ShopContainer } from \"./shop.styles.jsx\";\r\n\r\n// const CategoriesWithSpinner = WithSpinner(Categories);\r\n// const CategoryWithSpinner = WithSpinner(Category);\r\n\r\nconst ShopPage = ({ updatedCollections }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Retrieve the Products and Product Descriptions from the database\r\n  useEffect(() => {\r\n    const getCategoriesMap = async () => {\r\n      const categoriesArray = await getCategoriesAndDocuments();\r\n      dispatch(setCategories(categoriesArray));\r\n    };\r\n\r\n    const getProductDescription = async () => {\r\n      // Retrieve the product descriptions from the database\r\n      const descriptions = await getProductDescriptions();\r\n\r\n      // Dispatch the descriptions to state\r\n      dispatch(setProductDescriptions(descriptions));\r\n    };\r\n\r\n    getCategoriesMap();\r\n    getProductDescription();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ShopContainer>\r\n      <AnimatedPage>\r\n        <Routes>\r\n          <Route index element={<Categories />} />\r\n          <Route path=':category' element={<CategoryView />} />\r\n        </Routes>\r\n      </AnimatedPage>\r\n    </ShopContainer>\r\n  );\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//      updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n// })\r\n\r\n// export default connect(mapDispatchToProps)(ShopPage)\r\nexport default ShopPage;\r\n"],"sourceRoot":""}