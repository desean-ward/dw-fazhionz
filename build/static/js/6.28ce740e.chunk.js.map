{"version":3,"sources":["../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/init/init.js","../node_modules/emailjs-com/es/methods/send/send.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js","components/newsletter/newsletter.styles.jsx","components/newsletter/newsletter.component.jsx"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","_createClass","httpResponse","_classCallCheck","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","Container","styled","div","_templateObject","_taggedTemplateLiteral","Title","h2","_templateObject2","Description","_templateObject3","InputContainer","_templateObject4","Input","input","_templateObject5","Button","button","_templateObject6","Newsletter","_useState","useState","_useState2","_slicedToArray","modal","setModal","_useState3","_useState4","formValue","setFormValue","_useState5","_useState6","isSubmit","setIsSubmit","emailFormat","showModal","useEffect","sendEmail","validate","value","match","useRef","emailjs","current","then","result","console","log","error","_jsxs","_Fragment","children","_jsx","className","ref","onSubmit","e","preventDefault","name","type","placeholder","onChange","MdSend","GlassModal","show","close","titleBG","title","content"],"mappings":"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","file":"static/js/6.28ce740e.chunk.js","sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import tw, { styled } from \"twin.macro\";\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  z-index: 50;\r\n  width: 100%;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n\r\n  .content {\r\n    position: absolute;\r\n    top: 0;\r\n    background-color: maroon;\r\n    width: 100%;\r\n    //padding: 4rem 15% 6rem 15%;\r\n    padding: 4em;\r\n  }\r\n\r\n  /* \t@media only screen and (max-width: 770px) and (orientation: portrait) {\r\n\t\tmargin-top: 80vh;\r\n\t}\r\n */\r\n\r\n  /* @media screen and (max-width: 800px) and (max-height: 700px) {\r\n\t\t//height: 70vh;\r\n\t\tmargin-top: 60px;\r\n\t} */\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  top: -0.5em;\r\n  position: relative;\r\n\r\n  ${tw`\r\n      md:text-[3em]\r\n    `}/* @media screen and (max-width: 800px) {\r\n\t\tfont-size: 50px;\r\n\t} */\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  //font-size: 24px;\r\n  font-weight: 300;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const InputContainer = styled.form`\r\n  position: relative;\r\n  height: 40px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 40%;\r\n  outline: none;\r\n  padding: 0.5em;\r\n\r\n  @media (width <= 700px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: maroon;\r\n  color: white;\r\n  position: relative;\r\n  outline: none;\r\n  padding: 0.25em;\r\n\r\n  :hover {\r\n    background-color: white;\r\n    color: maroon;\r\n    border: maroon;\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport emailjs from 'emailjs-com'\r\n\r\nimport GlassModal from '../glass-popup/glass-popup.component'\r\n\r\nimport {\r\n\tContainer,\r\n\tTitle,\r\n\tDescription,\r\n\tInputContainer,\r\n\tInput,\r\n\tButton,\r\n} from './newsletter.styles'\r\n\r\nimport { MdSend } from 'react-icons/md'\r\n\r\nconst Newsletter = () => {\r\n\tconst [modal, setModal] = useState(false)\r\n\tconst initialValue = ''\r\n\tconst [formValue, setFormValue] = useState(initialValue)\r\n\tconst [isSubmit, setIsSubmit] = useState(false)\r\n\tconst email = document.querySelector('.email-input')\r\n\r\n\tconst emailFormat =\r\n\t\t/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetFormValue(e.target.value)\r\n\t\tconsole.log(formValue)\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\t// Validate the email format before submitting via useEffect\r\n\t\tvalidate(formValue) ? setIsSubmit(true) : setIsSubmit(false)\r\n\t}\r\n\r\n\tconst showModal = () => {\r\n\t\tsetModal(!modal)\r\n\t\tsetFormValue(initialValue)\r\n\r\n\t\tif (modal) setIsSubmit(false)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t// Submit the email and show confirmation modal/popup\r\n\t\tif (isSubmit) {\r\n\t\t\tsendEmail()\r\n\t\t\tshowModal()\r\n\t\t}\r\n\t}, [isSubmit])\r\n\r\n\tconst validate = (value) => {\r\n\t\tif (value.match(emailFormat)) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\tconst form = useRef()\r\n\r\n\tconst sendEmail = () => {\r\n\t\temailjs\r\n\t\t\t.sendForm(\r\n\t\t\t\t'service_jhnvilg',\r\n\t\t\t\t'dw-fazhionz-newsletter',\r\n\t\t\t\tform.current,\r\n\t\t\t\t'user_E2SDLaiMBuyQ2WLk4t4Vg'\r\n\t\t\t)\r\n\t\t\t.then(\r\n\t\t\t\t(result) => {\r\n\t\t\t\t\tconsole.log(result.text)\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tconsole.log(error.text)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container>\r\n\t\t\t\t<div className='content'>\r\n\t\t\t\t\t<Title>Newsletter</Title>\r\n\t\t\t\t\t<Description>\r\n\t\t\t\t\t\tSubscribe to receive updates on deals and new arrivals\r\n\t\t\t\t\t</Description>\r\n\r\n\t\t\t\t\t<InputContainer\r\n\t\t\t\t\t\tref={form}\r\n\t\t\t\t\t\tclassName='form'\r\n\t\t\t\t\t\tonSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tclassName='email-input'\r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tplaceholder='Your email'\r\n\t\t\t\t\t\t\tvalue={formValue}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button type='submit'>\r\n\t\t\t\t\t\t\t<MdSend />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</InputContainer>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\r\n\t\t\t<GlassModal\r\n\t\t\t\tshow={modal}\r\n\t\t\t\tclose={showModal}\r\n\t\t\t\ttitleBG='D.W. Fazhionz'\r\n\t\t\t\ttitle=\"You're now subscribed!\"\r\n\t\t\t\tcontent='Please watch your inbox for weekly deals.'\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Newsletter\r\n"],"sourceRoot":""}